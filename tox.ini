[tox]
envlist = pep8,py38,bandit,docs

[testenv]
pass_env =
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY

[testenv:venv]
commands = {posargs}

[testenv:py38]
setenv =
  PYTHONWARNING=all
deps = -r{toxinidir}/requirements-frozen.txt
       -r{toxinidir}/test-requirements.txt
commands =
    pytest {posargs}

[testenv:bandit]
deps =
    -r{toxinidir}/test-requirements.txt
commands =
    bandit -r promenade

[testenv:docs]
pass_env = {[pkgenv]pass_env}
allowlist_externals =
    rm
deps =
    -r{toxinidir}/doc/requirements.txt
commands =
    rm -rf doc/build
    sphinx-build -W -b html doc/source doc/build/html

[testenv:fmt]
deps =
    -r{toxinidir}/test-requirements.txt
commands =
    yapf -ir {toxinidir}/promenade {toxinidir}/tests {toxinidir}/tools/image_tags.py

[testenv:freeze]
deps = -r{toxinidir}/requirements-direct.txt
recreate = True
allowlist_externals = sh
                      grep
commands=
    sh -c "pip freeze | grep -vE '^(promenade)|(pkg-resources)' > {toxinidir}/requirements-frozen.txt"

[testenv:gate-lint]
deps =
    jsonschema==2.6.0
allowlist_externals = sh
commands =
    {toxinidir}/tools/lint_gate.sh

[testenv:pep8]
deps =
    -r{toxinidir}/test-requirements.txt
commands =
    yapf -rd {toxinidir}/promenade {toxinidir}/tests {toxinidir}/tools/image_tags.py
    flake8 {toxinidir}/promenade
    bandit -r promenade

[flake8]
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
# [H204] Use assert(Not)Equal to check for equality.
# [H205] Use assert(Greater|Less)(Equal) for comparison.
# [H210] Require 'autospec', 'spec', or 'spec_set' in mock.patch/mock.patch.object calls
# [H904] Delay string interpolations at logging calls.
enable-extensions = H106,H203,H204,H205,H210
# [E731] Do not assign a lambda expression, use a def. This reduces readability in some cases.
ignore = E126,E731,F405,H102,H301,H306,H401,H404,H405,H904,W503,W504
exclude =  .venv,.git,.tox,dist,*lib/python*,*egg,build,releasenotes,doc,alembic/versions
